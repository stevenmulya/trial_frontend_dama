---
export async function getStaticPaths() {
    try {
        const response = await fetch("https://trial-backend-dama.vercel.app/myservices");
        const services = await response.json();

        return services
            .filter((service: any) => service.myservice_type === "special")
            .map((service: any) => ({
                params: {
                    name: service.myservice_name
                        ? service.myservice_name.toLowerCase().replace(/[^a-z0-9]+/g, "-")
                        : "unknown",
                },
                props: { service },
            }));
    } catch (error) {
        console.error('Error fetching services for getStaticPaths:', error);
        return [];
    }
}

const { service } = Astro.props;

const specialServices = await fetch("https://trial-backend-dama.vercel.app/myservices").then(res => res.json()).then(data => data.filter((service: any) => service.myservice_type === "special"));

---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Special Services</title>
    <style>
        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 800px;
            margin: 40px auto;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 20px;
            color: #222;
        }
        .service-item {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 10px;
        }
        .service-item a {
            text-decoration: none;
            color: #007bff;
        }
        .service-item a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Special Services</h1>
        {specialServices.map((service: any) => (
            <div class="service-item">
                <a href={`/services/special/${service.myservice_name ? service.myservice_name.toLowerCase().replace(/[^a-z0-9]+/g, "-") : "unknown"}`}>
                    <h2>{service.myservice_name}</h2>
                </a>
            </div>
        ))}
    </div>
</body>
</html>