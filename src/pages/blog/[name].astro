---
interface Blog {
    id: number;
    myblog_title: string;
    myblog_author: string;
    myblog_date: string;
    myblog_image: string;
    myblog_content: string;
}

export async function getStaticPaths() {
    try {
        const response = await fetch("https://trial-backend-dama.vercel.app/myblogs");
        const blogs: Blog[] = await response.json();

        return blogs.map((blog) => ({
            params: { name: blog.myblog_title.toLowerCase().replace(/[^a-z0-9]+/g, "-") },
            props: { blog },
        }));
    } catch (error) {
        console.error('Error fetching blogs for getStaticPaths:', error);
        return [];
    }
}

const { blog } = Astro.props as { blog: Blog };
---

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{blog.myblog_title}</title>
    <style>
        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .blog-container {
            max-width: 800px;
            margin: 40px auto;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .blog-title {
            font-size: 2.5rem;
            font-weight: 700;
            line-height: 1.2;
            margin-bottom: 10px;
            color: #222;
        }
        .blog-author-date {
            font-size: 0.9rem;
            color: #777;
            margin-bottom: 20px;
        }
        .blog-image {
            width: 100%;
            max-height: 400px;
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        .blog-content {
            font-size: 1.1rem;
            line-height: 1.6;
            color: #555;
            white-space: pre-line;
        }
    </style>
</head>
<body>
<div class="blog-container">
    <h1 class="blog-title">{blog.myblog_title}</h1>
    <p class="blog-author-date">
        By {blog.myblog_author} | {blog.myblog_date}
    </p>
    {blog.myblog_image && (
        <img src={blog.myblog_image} alt={blog.myblog_title} class="blog-image" />
    )}
    <div class="blog-content">{blog.myblog_content}</div>
</div>
</body>
</html>